/*
 * Hover
 */
@mixin hover-focus {
  &:focus,
  &:hover {
    @content
  }
}

@mixin respond-to($breakpoint, $scope: down) {
  @if $breakpoint == 'extra-small' {
    @media (max-width: #{map-get($breakpoints, xs)}) {
      @content;
    }
  } @else if $breakpoint == small {
    @if $scope == up {
      @media (min-width: #{map-get($breakpoints, sm)}) {
        @content;
      }
    } @else {
      @media (max-width: #{map-get($breakpoints, md)}) {
        @content;
      }
    }
  } @else if $breakpoint == medium {
    @if $scope == up {
      @media (min-width: #{map-get($breakpoints, md)}) {
        @content;
      }
    } @else {
      @media (max-width: #{map-get($breakpoints, lg)}) {
        @content;
      }
    }
  } @else if $breakpoint == large {
    @if $scope == up {
      @media (min-width: #{map-get($breakpoints, lg)}) {
        @content;
      }
    } @else {
      @media (max-width: #{map-get($breakpoints, xl)}) {
        @content;
      }
    }
  } else {
    @media (min-width: #{map-get($breakpoints, xl)}) {
      @content;
    }
  }
}

@mixin respond-only-to($breakpoint) {
  @if $scope == small {
    @media (min-width: #{map-get($breakpoints, sm)}) and (max-width: #{map-get($breakpoints, md)}) {
      @content;
    }
  } @else if $scope == medium {
    @media (min-width: #{map-get($breakpoints, md)}) and (max-width: #{map-get($breakpoints, lg)}) {
      @content;
    }
  } @else if $scope == large {
    @media (min-width: #{map-get($breakpoints, lg)}) and (max-width: #{map-get($breakpoints, xl)}) {
      @content;
    }
  }
}
